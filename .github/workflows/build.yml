name: Build
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v12



      # https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-


      - uses: actions/cache@v2
        name: Cache node_modules
        with:
          path: "node_modules"
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-node_modules

      - uses: actions/cache@v2
        name: Cache scalajs-bundler node_modules
        with:
          path: "*/target/**/main/node_modules"
          key: ${{ runner.os }}-scalajsbundler-node_modules-${{ hashFiles('*/yarn.lock') }}
          restore-keys: ${{ runner.os }}-scalajsbundler-node_modules

      - name: Cache Scalablytyped transpilations
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/local/org.scalablytyped
            ~/.cache/scalablytyped
          key: ${{ runner.os }}-scalablytyped-${{ hashfiles('build.sbt') }}-${{ hashFiles('*/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-scalablytyped-





      - name: Run fast/full-opt
        run: |
          sbt scalafmtCheck scalafmtSbtCheck compile {webapp,lambda}/{fast,full}OptJS/webpack

      - uses: hashicorp/setup-terraform@v1
      - name: Validate Terraform
        run: |
          cd terraform
          terraform init
          terraform validate

      - name: yarn install
        run: yarn install

      # - name: Debug over SSH (tmate)
      #   # if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true
